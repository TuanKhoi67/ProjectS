<head>
  <title>Student Dashboard</title>
</head>

<style>
  .dashboard-section {
    margin-bottom: 2.5rem;
  }

  .student-dashboard-header {
    font-weight: 600;
    font-size: 1.5rem;
    color: #2a2a91;
    border-bottom: 2px solid #e0e0e0;
    padding-bottom: 0.5rem;
    margin-bottom: 1.2rem;
  }

  .meeting-card,
  .message-card,
  .doc-card,
  .blog-card {
    background-color: #f9f9ff;
    border: 1px solid #d4d8f0;
    border-left: 4px solid #2a2a91;
    border-radius: 12px;
    padding: 1rem;
    margin-bottom: 1rem;
    transition: 0.3s;
    height: 240px;
    /* Set a fixed height */
    overflow-y: auto;
    /* Enable vertical scrolling */
  }

  .meeting-card:hover,
  .message-card:hover,
  .doc-card:hover,
  .blog-card:hover {
    background-color: #eef2ff;
  }

  .blog-card-dashboard {
    border-radius: 15px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
    transition: transform 0.3s ease;
    background: #fff;
    padding: 1rem;
    height: 100%;
  }

  .blog-card-dashboard:hover {
    transform: scale(1.02);
  }

  .blog-img-dashboard {
    width: 100%;
    height: 180px;
    object-fit: cover;
    border-radius: 10px;
    margin-bottom: 10px;
  }

  .blog-title-dashboard {
    font-size: 1.2rem;
    font-weight: bold;
    color: #2a2a91;
    margin-bottom: 0.5rem;
  }

  .blog-meta-dashboard {
    font-size: 0.9rem;
    color: #6c757d;
    margin-bottom: 0.5rem;
  }

  .blog-content-dashboard {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    height: 1.6rem;
    margin-bottom: 0.5rem;
    color: #333;
  }

  .blog-actions-dashboard {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: auto;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .blog-actions-dashboard form,
  .blog-actions-dashboard a {
    flex-grow: 1;
  }

  .blog-actions-dashboard .btn {
    width: 100%;
    font-size: 0.9rem;
  }

  .student-chart-contaier {
    background: #ffffff;
    border: 1px solid #dee2e6;
    border-radius: 12px;
    padding: 0.75rem;
    /* reduced padding */
    margin-bottom: 1.5rem;
    /* smaller spacing */
    height: 260px;
    /* smaller container height */
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .student-chart-contaier canvas {
    max-height: 220px !important;
    /* force canvas to scale down */
  }

  @media (max-width: 576px) {

    .meeting-card,
    .doc-card {
      overflow: visible;
      height: auto;
    }

    .message-card {
      margin-bottom: 0px;
    }
  }
</style>

<body>
  <div class="container py-4">
    <h2 class="mb-4">üéì Hello, {{studentName}}!</h2>

    <!-- === Chart Section === -->
    <div class="dashboard-section">
      <div class="student-dashboard-header">üìä Activity Overview</div>

      <div class="row g-4">
        <!-- Row 1: Interaction + Blog Stats -->
        <div class="col-12 col-md-6">
          <div class="student-chart-contaier">
            <canvas id="interactionChart"></canvas>
          </div>
        </div>

        <div class="col-12 col-md-6">
          <div class="student-chart-contaier">
            <canvas id="myBlogsChart"></canvas>
          </div>
        </div>

        <!-- Row 2: Document Types + Weekly Activity -->
        <div class="col-12 col-md-6">
          <div class="student-chart-contaier">
            <canvas id="fileTypesChart"></canvas>
          </div>
        </div>

        <div class="col-12 col-md-6">
          <div class="student-chart-contaier">
            <canvas id="weeklyActivityChart"></canvas>
          </div>
        </div>

        <!-- Row 3: Attendance (Full-width) -->
        <div class="col-12">
          <div class="student-chart-contaier">
            <canvas id="attendanceChart"></canvas>
          </div>
        </div>
      </div>

      <!-- === Blog Section Next === -->
      <div class="dashboard-section mt-5">
        <div class="student-dashboard-header">üìù Your Blog</div>
        {{#if blogs.length}}
        <div class="row row-cols-1 row-cols-md-2 row-cols-xl-3 g-4">
          {{#each blogs}}
          <div class="col">
            <div class="blog-card-dashboard d-flex flex-column">
              {{#if this.image}}
              <img src="{{absolutePath this.image}}" alt="Blog Image" class="blog-img-dashboard" />
              {{else}}
              <div class="bg-secondary text-white text-center py-4 rounded mb-2">No Image</div>
              {{/if}}

              <div class="blog-title-dashboard">{{this.title}}</div>
              <div class="blog-meta-dashboard">
                <i class="fa-solid fa-heart"> {{this.likes}}</i> |
                <i class="fa-solid fa-comment-dots"> {{this.comments.length}}</i>
              </div>
              <div class="blog-content-dashboard">{{this.content}}</div>

              <div class="blog-actions-dashboard">
                <a href="/blog/edit/{{this._id}}" class="btn btn-sm"><i class="fa-regular fa-pen-to-square"></i>
                  Edit</a>
                <form action="/blog/delete/{{this._id}}" method="POST" onsubmit="return confirm('Delete blog?');">
                  <button type="submit" class="btn btn-sm"><i class="fa-regular fa-trash-can"></i> Delete</button>
                </form>
              </div>
            </div>
          </div>
          {{/each}}
        </div>
        {{else}}
        <p class="text-muted">You haven't posted any blogs yet.</p>
        {{/if}}
      </div>

      <!-- === Messages (left), Meetings + Documents (right) === -->
      <div class="dashboard-section mt-5">
        <div class="row g-4">
          <!-- Messages Left -->
          <div class="col-12 col-lg-6">
            <div class="message-card h-100">
              <div class="student-dashboard-header">üí¨ Messages</div>
              {{#if recentMessages.length}}
              {{#each recentMessages}}
              <div>
                <strong>{{this.sender.fullname}}</strong>: {{this.content}}<br />
                <small>{{this.createdAt}}</small>
                <hr />
              </div>
              {{/each}}
              {{else}}
              <p class="text-muted">No messages.</p>
              {{/if}}
            </div>
          </div>

          <!-- Meetings + Documents Right -->
          <div class="col-12 col-lg-6">
            <div class="meeting-card mb-4">
              <div class="student-dashboard-header">üìÖ Meetings</div>
              {{#if meetings.length}}
              {{#each meetings}}
              <div>
                <strong>{{this.title}}</strong> ({{this.status}})<br />
                {{this.startTime}} ‚Äì {{this.endTime}}<br />
                <small>Note: {{this.note}}</small><br />
                <small><b>Tutor:</b> {{this.tutor.[0].fullname}}</small>
                <hr />
              </div>
              {{/each}}
              {{else}}
              <p class="text-muted">No meetings.</p>
              {{/if}}
            </div>

            <div class="doc-card">
              <div class="student-dashboard-header">üìÅ Documents</div>
              {{#if documents.length}}
              {{#each documents}}
              <div>
                <strong>{{this.title}}</strong><br />
                <a href="{{this.imageUrl}}" target="_blank">View</a>
                {{#if this.documentFile}} | <a href="{{this.documentFile}}" target="_blank">Download</a>{{/if}}<br />
                <small>{{this.content}}</small>
                <hr />
              </div>
              {{/each}}
              {{else}}
              <p class="text-muted">No uploaded documents.</p>
              {{/if}}
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>


  <!-- Scripts -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
    const chartData = {{{ json chartData }}};

    // === Weekly Activity Chart (Line) ===
    const weeklyLabels = Object.keys(chartData.weeklyActivity);
    const blogsData = weeklyLabels.map(d => chartData.weeklyActivity[d].blogs);
    const messagesData = weeklyLabels.map(d => chartData.weeklyActivity[d].messages);
    const commentsData = weeklyLabels.map(d => chartData.weeklyActivity[d].comments);

    new Chart(document.getElementById('weeklyActivityChart').getContext('2d'), {
      type: 'line',
      data: {
        labels: weeklyLabels,
        datasets: [
          {
            label: 'Blogs',
            data: blogsData,
            borderColor: '#0d6efd',
            backgroundColor: 'rgba(13, 110, 253, 0.1)',
            fill: true,
            tension: 0.3
          },
          {
            label: 'Messages',
            data: messagesData,
            borderColor: '#198754',
            backgroundColor: 'rgba(25, 135, 84, 0.1)',
            fill: true,
            tension: 0.3
          },
          {
            label: 'Comments',
            data: commentsData,
            borderColor: '#ffc107',
            backgroundColor: 'rgba(255, 193, 7, 0.1)',
            fill: true,
            tension: 0.3
          }
        ]
      },
      options: {
        responsive: true,
        plugins: {
          title: {
            display: true,
            text: 'Weekly Interaction Timeline'
          }
        },
        scales: {
          y: {
            beginAtZero: true,
            ticks: {
              stepSize: 1
            }
          }
        }
      }
    });

    // === Document Types Chart (Doughnut for PDF & Word Only) ===
    new Chart(document.getElementById('fileTypesChart').getContext('2d'), {
      type: 'doughnut',
      data: {
        labels: ['PDF', 'Word'],
        datasets: [{
          data: [
            chartData.fileTypes.pdf,
            chartData.fileTypes.word
          ],
          backgroundColor: ['#6610f2', '#0dcaf0']
        }]
      },
      options: {
        responsive: true,
        plugins: {
          title: {
            display: true,
            text: 'Document Types Uploaded'
          }
        }
      }
    });

    // === Blog Summary Chart (Bar) ===
    new Chart(document.getElementById('myBlogsChart').getContext('2d'), {
      type: 'bar',
      data: {
        labels: ['Posts', 'Likes', 'Comments'],
        datasets: [{
          label: 'Your Blog Stats',
          data: [chartData.totalBlogs, chartData.totalLikes, chartData.totalComments],
          backgroundColor: ['#0d6efd', '#198754', '#ffc107'],
          borderRadius: 8
        }]
      },
      options: {
        indexAxis: 'y', // Horizontal bars
        responsive: true,
        plugins: {
          title: {
            display: true,
            text: 'Blog Summary'
          }
        },
        scales: {
          x: {
            beginAtZero: true
          }
        }
      }
    });

    // === Interactions with Others Chart (Doughnut) ===
    new Chart(document.getElementById('interactionChart').getContext('2d'), {
      type: 'polarArea',
      data: {
        labels: ['Liked Posts', 'Commented Posts'],
        datasets: [{
          data: [chartData.likedCount, chartData.commentedCount],
          backgroundColor: ['#20c997', '#6f42c1']
        }]
      },
      options: {
        responsive: true,
        plugins: {
          title: {
            display: true,
            text: 'Interactions with Others'
          }
        }
      }
    });

    // === Attendance Chart (Bar) === CH∆ØA C√ì D·ªÆ LI·ªÜU
    // Sample data for attendance chart (replace with actual data)
    // This data should be fetched from your server or database
    // and passed to the template as `attendanceData`.
    const attendanceData = {
      classes: ['Class A', 'Class B', 'Class C'],
      presentCounts: [10, 15, 8],
      absentCounts: [2, 3, 1]
    };
    new Chart(document.getElementById('attendanceChart'), {
      type: 'bar',
      data: {
        labels: attendanceData.classes,
        datasets: [
          {
            label: 'C√≥ m·∫∑t',
            data: attendanceData.presentCounts,
            backgroundColor: '#198754'
          },
          {
            label: 'V·∫Øng m·∫∑t',
            data: attendanceData.absentCounts,
            backgroundColor: '#dc3545'
          }
        ]
      },
      options: {
        plugins: {
          title: { display: true, text: 'T√¨nh tr·∫°ng ƒëi·ªÉm danh theo l·ªõp' }
        },
        responsive: true,
        scales: {
          y: { beginAtZero: true }
        }
      }
    });
  </script>
</body>
