<head>
    <title>Blog Reel</title>
</head>

<style>
    .reel-container {
        max-width: 1300px;
        margin: auto;
        padding-left: 25px;
        padding-right: 25px;
        display: flex;
        flex: 1;
    }

    .reel-main-content {
        flex: 1;
        width: 100%;
        /* Full width for responsiveness */
        max-width: 800px;
        /* Max width for the card */
        position: relative;
        margin-left: auto;
        margin-right: auto;
        padding: 16px;
    }

    .search-box {
        position: relative;
        padding: 10px;
    }

    .search-box .search-icon {
        position: absolute;
        top: 50%;
        left: 25px;
        transform: translateY(-50%);
        color: #9ca3af;
        font-size: 16px;
    }

    .search-box input {
        width: 100%;
        padding: 8px 8px 8px 40px;
        /* Add padding to the left for the icon */
        border: 1px solid #ccc;
        border-radius: 20px;
    }

    .post {
        background-color: white;
        padding: 16px;
        border-radius: 8px;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.315);
        margin-bottom: 16px;
    }

    .profile-img {
        border-radius: 50%;
        width: 45px;
        height: 45px;
        margin-right: 8px;
        object-fit: cover;
        border: 2px solid #ccc;
    }

    .post-img {
        width: 100%;
        border-radius: 8px;
        margin-bottom: 16px;
    }

    .post .post-header {
        display: flex;
        align-items: center;
        margin-bottom: 16px;
    }

    .post .post-header div {
        display: flex;
        flex-direction: column;
    }

    .post .post-header div h2 {
        margin: 0;
        font-size: 16px;
        font-weight: 700;
    }

    .post .post-header div p {
        margin: 0;
        color: #9ca3af;
    }

    .dots-btn {
        position: relative;
        width: 30px;
        height: 30px;
        background-color: transparent;
        border: none;
        padding: 3px;
    }

    .dots-btn:hover {
        background-color: #9ca3af;
        width: 30px;
        height: 30px;
        border-radius: 50%;
        padding: 3px;
    }

    .dropdown-toggle::after {
        display: none;
    }

    .post .post-footer {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .post .post-footer i {
        margin-right: 8px;
    }

    .post .post-footer .likes,
    .post .post-footer .comments {
        display: flex;
        align-items: center;
    }

    .post .post-footer .likes i {
        color: #ef4444;
    }

    .post .post-footer .like-btn {
        background: none;
        border: none;
        cursor: pointer;
        display: flex;
        align-items: center;
    }

    .liked {

        color: #ff0000 !important;
    }

    .post .post-footer .comments i {
        color: #9ca3af;
    }

    .comment-form {
        margin-top: 10px;
    }

    .comment-input {
        display: flex;
        align-items: center;
    }

    .comment-input img {
        border-radius: 50%;
        width: 45px;
        height: 45px;
        margin-right: 8px;
        object-fit: cover;
        border: 2px solid #ccc;
    }

    .comment-input input {
        flex-grow: 1;
        padding: 8px;
        border: 1px solid #d1d5db;
        border-radius: 20px;
        outline: none;
        margin-right: 8px;
    }

    .comment {
        margin-bottom: 5px;
        padding: 5px;
        border-radius: 5px;
        background: #f8f9fa;
    }
</style>

<body>
    <div class="reel-container">
        <!-- Main Content -->
        <div class="reel-main-content">
            <div class="search-box">
                <i class="fa-solid fa-magnifying-glass search-icon"></i>
                <input type="text" id="search-input" placeholder="Search for blog...">
            </div>
            <h2 class="text-center mb-3">Blog Reel</h2>
            {{#each blogs}}
            <div class="post" data-title="{{this.title}}" data-author="{{this.author.fullname}}"
                data-content="{{this.content}}">
                <div class="post-header">
                    <img class="profile-img" src="{{this.avatar}}" alt="Avatar">
                    <div>
                        <h2>{{this.author.fullname}}</h2>
                        <small class="post-time">{{formatDate this.createdAt}}</small>
                    </div>
                    <div class="dropdown ms-auto">
                        {{!-- <button class="dots-btn btn-sm dropdown-toggle" type="button"
                            id="dropdownMenuButton{{this._id}}" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="fa-solid fa-ellipsis"></i>
                        </button> --}}
                        {{!-- <ul class="dropdown-menu dropdown-menu-end"
                            aria-labelledby="dropdownMenuButton{{this._id}}">
                            <li><a class="dropdown-item" href="/blog/edit/{{this._id}}">Edit</a></li>
                            <li>
                                <a class="dropdown-item" href="#"
                                    onclick="if (confirm('Are you sure you want to delete this blog?')) { document.getElementById('delete-form-{{this._id}}').submit(); } return false;">
                                    Delete
                                </a>
                                <form id="delete-form-{{this._id}}" action="/blog/delete/{{this._id}}" method="post"
                                    style="display: none;"></form>
                            </li>
                        </ul> --}}
                    </div>
                </div>
                {{#if this.image}}
                <img class="post-img" src="{{{absolutePath this.image}}}" alt="{{this.title}}">
                {{/if}}

                <!-- Hiển thị link tài liệu nếu có -->
                {{#if this.documentFile}}
                <div class="mt-3">
                    <a href="{{this.documentFile}}" target="_blank" class="btn btn-info">Tải tài liệu</a>
                </div>
                {{/if}}
                <div class="post-footer">
                    <div class="likes">
                        <button class="like-btn" data-id="{{this._id}}">
                            <i class="{{#if this.isLiked}}fa-solid liked{{else}}fa-regular{{/if}} fa-heart"></i>
                        </button>
                        <span class="like-count">{{this.likes}} Likes</span>
                    </div>
                    <div class="comments">
                        <i class="fas fa-comment"></i>
                        <span>{{this.comments.length}} Comments</span>
                    </div>
                </div>
                <p><strong>{{this.author.fullname}}</strong> {{this.content}}</p>
                <div>
                    <h6>All Comments</h6>
                    {{#each this.comments}}
                    <div class="comment">
                        <strong>{{this.user.fullname}}</strong>: {{this.content}}
                        <br>
                        <small class="text-muted">{{formatDate this.createdAt}}</small>
                    </div>
                    {{/each}}
                </div>
                {{!-- <button class="btn" onclick="toggleComment(this)">Comment</button> --}}
                {{#if ../user}}
                <form action="/blog/reel/comment/{{this._id}}" method="POST" class="comment-form">
                    <div class="comment-input">
                        <img src="{{../userAvatar}}" alt="Avatar" class="rounded-circle" width="40" height="40">
                        <input type="text" name="content" placeholder="Write a comment..." required>
                        <button type="submit" class="btn">Post</button>
                    </div>
                </form>
                {{else}}
                <p class="text-muted">Bạn cần <a href="/auth/login">đăng nhập</a> để bình luận.</p>
                {{/if}}
            </div>
            {{/each}}
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            document.querySelectorAll('.like-btn').forEach(button => {
                button.addEventListener('click', async function () {
                    const postId = this.dataset.id;
                    const likeCountSpan = this.nextElementSibling;
                    const heartIcon = this.querySelector('i');

                    try {
                        const response = await fetch(`/blog/like/${postId}`, {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' }
                        });

                        const contentType = response.headers.get('content-type');

                        if (!response.ok) {
                            if (contentType && contentType.includes('application/json')) {
                                const error = await response.json();
                                alert(error.error || 'Có lỗi xảy ra.');
                            } else {
                                // Nếu không phải JSON, có thể là HTML -> chuyển hướng đến trang đăng nhập
                                window.location.href = '/auth/login';
                            }
                            return;
                        }

                        const data = await response.json();

                        if (likeCountSpan) {
                            likeCountSpan.textContent = `${data.likes} Likes`;
                        }

                        if (heartIcon) {
                            if (data.isLiked) {
                                heartIcon.classList.remove('fa-regular');
                                heartIcon.classList.add('fa-solid', 'liked');
                            } else {
                                heartIcon.classList.remove('fa-solid', 'liked');
                                heartIcon.classList.add('fa-regular');
                            }
                        }

                    } catch (error) {
                        console.error('Error:', error);
                        alert('Đăng nhập rồi mới like được nghen!!!!!');
                    }
                });
            });
        });


        function toggleComment(button) {
            const form = button.closest('.post').querySelector('.comment-form');
            form.style.display = form.style.display === 'none' ? 'block' : 'none';
        }
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const searchInput = document.getElementById('search-input');
            const posts = document.querySelectorAll('.post');

            searchInput.addEventListener('input', () => {
                const query = searchInput.value.toLowerCase();

                posts.forEach(post => {
                    const title = post.getAttribute('data-title').toLowerCase();
                    const author = post.getAttribute('data-author').toLowerCase();
                    const content = post.getAttribute('data-content').toLowerCase();

                    if (title.includes(query) || author.includes(query) || content.includes(query)) {
                        post.style.display = 'block';
                    } else {
                        post.style.display = 'none';
                    }
                });
            });
        });
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
