<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Nh·∫Øn Tin</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: Arial, sans-serif;
        }

        body {
            display: flex;
            flex-direction: column;
            height: 100vh;
        }

        .navbar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            background: #007bff;
            color: white;
            padding: 10px 20px;
        }

        .navbar a {
            color: white;
            text-decoration: none;
            margin: 0 10px;
            font-weight: bold;
        }

        .navbar a:hover {
            text-decoration: underline;
        }

        .container {
            display: flex;
            flex: 1;
        }

        .user-list {
            width: 30%;
            border-right: 1px solid #ccc;
            padding: 10px;
            overflow-y: auto;
            background: #f4f4f4;
        }

        .user-item {
            padding: 10px;
            border-bottom: 1px solid #ccc;
            cursor: pointer;
            background: white;
        }

        .user-item:hover {
            background: #ddd;
        }

        .chat-box {
            width: 70%;
            display: flex;
            flex-direction: column;
        }

        .chat-header {
            padding: 10px;
            background: #007bff;
            color: white;
            font-weight: bold;
        }

        .messages {
            flex: 1;
            padding: 20px;
            background: #F0F2F5;
            overflow-y: auto;
            display: flex;
            flex-direction: column;
        }

        .message {
            margin: 5px;
            padding: 10px;
            border-radius: 15px;
            max-width: 70%;
            word-wrap: break-word;
        }

        .sent {
            background: #DCF8C6;
            align-self: flex-end;
        }

        .received {
            background: #FFFFFF;
            align-self: flex-start;
            border: 1px solid #EEE;
        }

        .input-box {
            display: flex;
            padding: 10px;
            background: #fff;
        }

        .input-box input {
            flex: 1;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .input-box button {
            padding: 10px;
            border: none;
            background: #007bff;
            color: white;
            cursor: pointer;
            margin-left: 10px;
            border-radius: 5px;
        }
    </style>
</head>

<body>

    <div class="navbar">
        <div>
            <a href="/">üè† Trang Ch·ªß</a>
            <a href="/profile">üë§ H·ªì S∆°</a>
            <a href="/message">üí¨ Nh·∫Øn Tin</a>
        </div>
        <div>
            <a href="/auth/logout">üö™ ƒêƒÉng Xu·∫•t</a>
        </div>
    </div>

    <div class="container">
        <div class="user-list">
            <h2>Ng∆∞·ªùi D√πng: {{user.fullname}}</h2>
            {{#each users}}
            <div class="user-item" onclick="selectUser('{{this._id}}', '{{this.fullname}}')">
                {{this.fullname}}
            </div>
            {{/each}}
        </div>

        <div class="chat-box">
            <div class="chat-header" id="chat-header">Ch·ªçn m·ªôt ng∆∞·ªùi ƒë·ªÉ b·∫Øt ƒë·∫ßu nh·∫Øn tin</div>
            <div class="messages" id="messages"></div>
            <div class="input-box">
                <input type="text" id="message-input" placeholder="Nh·∫≠p tin nh·∫Øn..." onkeypress="handleKeyPress(event)">
                <button onclick="sendMessage()">G·ª≠i</button>
            </div>
        </div>
    </div>

    <script>
        document.getElementById('message-input').addEventListener('keydown', function (event) {
            if (event.key === 'Enter' && !event.shiftKey) {
                event.preventDefault();
                sendMessage();
            }
        });
        var socket = io();
        var currentUser = "{{user._id}}";
        var currentReceiver = null;

        socket.emit('registerUser', currentUser);

        function selectUser(userId, fullname) {
            currentReceiver = userId;
            document.getElementById("chat-header").innerText = "ƒêang nh·∫Øn tin v·ªõi " + fullname;
            document.getElementById("messages").innerHTML = "";

            fetch(`/message/chat/${userId}`)
                .then(response => response.json())
                .then(messages => {
                    messages.forEach(msg => addMessageToChat(msg.sender, msg.content, msg.createdAt));
                    scrollToBottom();
                })
                .catch(err => console.error("L·ªói khi t·∫£i tin nh·∫Øn:", err));
        }

        async function sendMessage() {
            const messageInput = document.getElementById('message-input');
            const message = messageInput.value.trim();

            if (!message || !currentReceiver) return;

            try {
                const response = await fetch('/message/chat', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ receiver: currentReceiver, content: message })
                });

                if (!response.ok) {
                    const error = await response.json();
                    throw new Error(error.error);
                }

                socket.emit('sendMessage', { sender: currentUser, receiver: currentReceiver, content: message });

                addMessageToChat(currentUser, message, new Date().toISOString());
                messageInput.value = '';
                scrollToBottom();
            } catch (error) {
                alert('G·ª≠i tin nh·∫Øn th·∫•t b·∫°i: ' + error.message);
            }
        }

        socket.on('receiveMessage', (message) => {
            // Ki·ªÉm tra n·∫øu tin nh·∫Øn ƒë√£ t·ªìn t·∫°i trong danh s√°ch ƒë·ªÉ tr√°nh b·ªã l·∫∑p
            const existingMessages = document.querySelectorAll(".message");
            let isDuplicate = Array.from(existingMessages).some(msg => msg.textContent.includes(message.content));

            if (!isDuplicate) {
                addMessageToChat(message.sender, message.content, message.createdAt);
                scrollToBottom();
            }
        });

        function addMessageToChat(sender, content, timestamp) {
            const className = sender === currentUser ? "sent" : "received";
            const time = new Date(timestamp).toLocaleTimeString();
            const msgElement = `
                <div class="message ${className}">
                    <div class="content">${content}</div>
                    <div class="time" style="font-size: 0.8em; color: gray; text-align: right;">${time}</div>
                </div>
            `;
            document.getElementById("messages").innerHTML += msgElement;
        }

        function handleKeyPress(event) {
            if (event.key === "Enter") {
                sendMessage();
            }
        }

        function scrollToBottom() {
            const messagesDiv = document.getElementById('messages');
            messagesDiv.scrollTop = messagesDiv.scrollHeight;
        }
    </script>

</body>

</html>