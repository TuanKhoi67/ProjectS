<head>
    <title>Chat with {{receiver.fullname}}</title>
</head>

    <style>
        .return-btn,
        .send-btn {
            background-color: #0056b3;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 30px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .return-btn:hover {
            background-color: #003366;
        }

        .send-btn:hover {
            background-color: #003366;
        }

        .chat-container {
            display: flex;
            flex-direction: column;
            justify-content: flex-end;
            height: 80vh;
            border-radius: 8px;
            border: 1px solid #ccc;
            background-color: #fff;
            padding: 15px;
            margin-bottom: 10px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }

        .messages {
            flex-grow: 1;
            overflow-y: auto;
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .message-container {
            display: flex;
            margin: 5px 0;
        }

        .message-container .message {
            padding: 8px 12px;
            border-radius: 30px;
            max-width: 60%;
        }

        .message-container.self {
            justify-content: flex-end;
        }

        .message-container.self .message {
            background-color: #0056b3;
            color: white;
            text-align: right;
        }

        .message-container.other {
            justify-content: flex-start;
        }

        .message-container.other .message {
            background-color: #f1f1f1;
            color: black;
        }

        .message-input-container {
            display: flex;
            gap: 10px;
            padding-top: 10px;
        }

        .message-input {
            flex-grow: 1;
            padding: 10px;
            border-radius: 25px;
            border: 1px solid #ccc;
            font-size: 16px;
        }

        form#chat-form {
            display: contents;
            align-items: center;
            gap: 10px;
        }
    </style>

<body>
    <div class="container">
        <h2 class="text-center">Chat with {{receiver.fullname}}</h2>
        <div class="chat-container">
            <div id="messages" class="messages">
                {{#each messages}}
                <div class="message-container {{#if (isSender sender ../user._id)}}self{{else}}other{{/if}}">
                    <div class="message">
                        <strong>{{#if (isSender sender ../user._id)}}{{else}}{{this.senderName}}{{/if}}</strong>
                        {{message}}
                    </div>
                </div>
                {{/each}}
            </div>
            <div class="message-input-container">
                <form id="chat-form" action="/message/chat/{{receiver._id}}" method="POST">
                    <input type="text" id="message" name="message" class="message-input" placeholder="Message..."
                        required />
                    <button class="send-btn" type="submit">Send</button>
                </form>
            </div>
        </div>
    </div>

    <script>
        const socket = io();
        const senderId = "{{user._id}}";
        const receiverId = "{{receiver._id}}";
        const messagesContainer = document.getElementById("messages");

        // Register user with socket
        socket.emit("registerUser", senderId);

        // Send message on form submit
        document.getElementById("chat-form").addEventListener("submit", function (e) {
            e.preventDefault();
            const messageInput = document.getElementById("message");
            const message = messageInput.value.trim();
            if (message) {
                const msgData = { sender: senderId, receiver: receiverId, message, senderName: "{{user.fullname}}" };
                socket.emit("chat message", msgData); // Send message to server
                messageInput.value = "";
            }
        });

        // Append new message to chat
        function appendMessage(msg, isSelf) {
            const senderDisplayName = isSelf ? "Báº¡n" : msg.senderName;
            const messageContainer = document.createElement("div");
            messageContainer.classList.add("message-container", isSelf ? "self" : "other");
            const messageElement = document.createElement("div");
            messageElement.className = "message";
            messageElement.innerHTML = `<strong>${senderDisplayName}:</strong> ${msg.message}`;
            messageContainer.appendChild(messageElement);
            messagesContainer.appendChild(messageContainer);
            messagesContainer.scrollTop = messagesContainer.scrollHeight;
        }

        // Receive real-time messages
        socket.on("chat message", function (msg) {
            if ((msg.sender === senderId && msg.receiver === receiverId) ||
                (msg.sender === receiverId && msg.receiver === senderId)) {
                appendMessage(msg, msg.sender === senderId);
            }
        });
    </script>
</body>